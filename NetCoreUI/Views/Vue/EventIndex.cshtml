
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EventIndex</title>
</head>
<body>
    <div id="example-1">
        <button v-on:click="counter += 1">Add 1</button>
        <p>The button above has been clicked {{ counter }} times.</p>
    </div>
    <div id="example-2">
        <!-- `greet` 是在下面定义的方法名 -->
        <button v-on:click="greet">Greet</button>
    </div>
    <div id="example-3">
        <button v-on:click="say('hi')">Say hi</button>
        <button v-on:click="say('what')">Say what</button>
    </div>

    <div id="example-5">
        @*<select v-model="selected" style="width: 100px;">
            <option disabled value="">请选择</option>
            <option>A</option>
            <option>B</option>
            <option>C</option>
        </select>
        <span>Selected: {{ selected }}</span>*@
        <select v-model="selected">
            <option v-for="option in options" v-bind:value="option.value">
                {{ option.text }}
            </option>
        </select>
        <span>Selected: {{ selected }}</span>
    </div>
</body>
</html>
<script src="~/js/jquery-1.91.min.js"></script>
<script src="~/js/vue.js" asp-append-version="true"></script>
<script>
    //监听事件
    var example1 = new Vue({
        el: '#example-1',
        data: {
            counter: 0
        }
    })
    //事件处理方法
    var example2 = new Vue({
        el: '#example-2',
        data: {
            name: 'Vue.js'
        },
        // 在 `methods` 对象中定义方法
        methods: {
            greet: function (event) {
                // `this` 在方法里指向当前 Vue 实例
                console.log('Hello ' + this.name + '!')
                // `event` 是原生 DOM 事件
                if (event) {
                    console.log(event);
                }
            }
        }
    })
    //也可以直接通过example2.greet()调用greet方法
    //内联处理器中的方法
    var example3= new Vue({
        el: '#example-3',
        methods: {
            say: function (message) {
                alert(message)
            }
        }
    })
   //下拉框
    var example5 = new Vue({
        el: '#example-5',
        data: {
            selected: 'A',
            options: [
                { text: 'One', value: 'A' },
                { text: 'Two', value: 'B' },
                { text: 'Three', value: 'C' }
            ]
        }
    })
</script>